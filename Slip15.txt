#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s <filename>\n", argv[0]);
        exit(1);
    }

    struct stat file_stat;
    if (stat(argv[1], &file_stat) == -1) {
        perror("stat");
        exit(1);
    }

    if (S_ISREG(file_stat.st_mode)) {
        printf("%s is a regular file\n", argv[1]);
    } else if (S_ISDIR(file_stat.st_mode)) {
        printf("%s is a directory\n", argv[1]);
    } else if (S_ISCHR(file_stat.st_mode)) {
        printf("%s is a character device\n", argv[1]);
    } else if (S_ISBLK(file_stat.st_mode)) {
        printf("%s is a block device\n", argv[1]);
    } else if (S_ISFIFO(file_stat.st_mode)) {
        printf("%s is a FIFO/pipe\n", argv[1]);
    } else if (S_ISLNK(file_stat.st_mode)) {
        printf("%s is a symbolic link\n", argv[1]);
    } else if (S_ISSOCK(file_stat.st_mode)) {
        printf("%s is a socket\n", argv[1]);
    } else {
        printf("%s is of an unknown type\n", argv[1]);
    }

    return 0;
}




#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/types.h>

void sig_handler(int signum) {
    switch(signum) {
        case SIGHUP:
            printf("Child process received SIGHUP signal.\n");
            break;
        case SIGINT:
            printf("Child process received SIGINT signal.\n");
            break;
        case SIGQUIT:
            printf("My Papa has Killed me!!!\n");
            exit(0);
            break;
        default:
            printf("Unexpected signal received.\n");
    }
}

int main() {
    pid_t pid;

    pid = fork();

    if (pid < 0) {
        fprintf(stderr, "Failed to fork.\n");
        exit(1);
    } else if (pid == 0) {
        signal(SIGHUP, sig_handler);
        signal(SIGINT, sig_handler);
        signal(SIGQUIT, sig_handler);

        while(1) {
            sleep(1);
        }
    } else {
        int i;
        for (i = 0; i < 5; i++) {
            sleep(3);
            kill(pid, SIGHUP);
        }
        sleep(3);
        kill(pid, SIGQUIT);
    }

    return 0;
}




a) Write an Android code to merge given two Array/List


import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MainActivity extends AppCompatActivity {
    private TextView resultTextView;
    private Button mergeButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        resultTextView = findViewById(R.id.result_textview);
        mergeButton = findViewById(R.id.merge_button);

        mergeButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mergeArrays();
            }
        });
    }

    private void mergeArrays() {
        // Sample arrays to merge
        Integer[] array1 = {1, 2, 3};
        Integer[] array2 = {4, 5, 6};

        // Convert arrays to lists
        List<Integer> list1 = new ArrayList<>(Arrays.asList(array1));
        List<Integer> list2 = new ArrayList<>(Arrays.asList(array2));

        // Merge the lists
        List<Integer> mergedList = new ArrayList<>();
        mergedList.addAll(list1);
        mergedList.addAll(list2);

        // Display the merged list
        String result = "Merged List: " + mergedList.toString();
        resultTextView.setText(result);
    }
}



<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/merge_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Merge Arrays" />

    <TextView
        android:id="@+id/result_textview"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:textSize="16sp"
        android:textStyle="bold" />

</LinearLayout>


b)Write an Android Application to send Email.


open the AndroidManifest.xml file and add the following permission to the <manifest> :

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private EditText editTextTo;
    private EditText editTextSubject;
    private EditText editTextMessage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        editTextTo = findViewById(R.id.edit_text_to);
        editTextSubject = findViewById(R.id.edit_text_subject);
        editTextMessage = findViewById(R.id.edit_text_message);

        Button buttonSend = findViewById(R.id.button_send);
        buttonSend.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                sendEmail();
            }
        });
    }

    private void sendEmail() {
        String recipientEmail = editTextTo.getText().toString().trim();
        String subject = editTextSubject.getText().toString().trim();
        String message = editTextMessage.getText().toString().trim();

        Intent intent = new Intent(Intent.ACTION_SENDTO);
        intent.setData(Uri.parse("mailto:" + recipientEmail));
        intent.putExtra(Intent.EXTRA_SUBJECT, subject);
        intent.putExtra(Intent.EXTRA_TEXT, message);

        try {
            startActivity(Intent.createChooser(intent, "Choose an email client"));
        } catch (Exception e) {
            Toast.makeText(this, "Failed to send email", Toast.LENGTH_SHORT).show();
        }
    }
}


<uses-permission android:name="android.permission.INTERNET" />
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/edit_text_to"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="To" />

    <EditText
        android:id="@+id/edit_text_subject"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Subject" />

    <EditText
        android:id="@+id/edit_text_message"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Message"
        android:inputType="textMultiLine"
        android:minLines="5" />

    <Button
        android:id="@+id/button_send"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Send" />

</LinearLayout>





