A)

#include <stdio.h>
#include <signal.h>

volatile int interrupt_count = 0;

void sigint_handler(int sig) {
    if (interrupt_count == 0) {
        printf("Caught SIGINT signal. Press Ctrl-C again to exit.\n");
        interrupt_count++;
    }
    else {
        printf("Exiting...\n");
        exit(0);
    }
}

int main() {
    signal(SIGINT, sigint_handler);

    while (1) {
        // Do nothing
    }

    return 0;
}



B)

#include <stdio.h>
#include <dirent.h>

int main() {
    DIR *dir;
    struct dirent *ent;
    FILE *file;

    dir = opendir(".");
    if (dir == NULL) {
        perror("Failed to open directory");
        return 1;
    }

    file = fopen("output.txt", "w");
    if (file == NULL) {
        perror("Failed to open file");
        return 1;
    }

    while ((ent = readdir(dir)) != NULL) {
        fprintf(file, "%s\n", ent->d_name);
    }

    closedir(dir);
    fclose(file);

    return 0;
}


a)Create a Simple Android Application Which Send ―Hello‖ message from one activity to another
with help of Button (Use Intent).




import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private Button sendButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        sendButton = findViewById(R.id.send_button);
        sendButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                sendMessage();
            }
        });
    }

    private void sendMessage() {
        Intent intent = new Intent(MainActivity.this, SecondActivity.class);
        intent.putExtra("message", "Hello");
        startActivity(intent);
    }
}


Create a new Java class file named SecondActivity.java and add the following code:

import android.os.Bundle;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class SecondActivity extends AppCompatActivity {
    private TextView messageTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);

        messageTextView = findViewById(R.id.message_textview);

        Bundle extras = getIntent().getExtras();
        if (extras != null) {
            String message = extras.getString("message");
            messageTextView.setText(message);
        }
    }
}

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/send_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Send Hello Message" />

</LinearLayout>

Create a new XML layout file named activity_second.xml and add the following code:

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp"
    tools:context=".SecondActivity">

    <TextView
        android:id="@+id/message_textview"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="24sp"
        android:textStyle="bold" />

</LinearLayout>



b)) Create an Android application which will ask the user to input his name and a message, display the
two items concatenated in a label, and change the format of the label using radio buttons and check
boxes for selection, the user can make the label text bold, underlined or italic and change its color
.include buttons to display the message in the label, clear the text boxes and label and then exit. 



import android.graphics.Color;
import android.os.Bundle;
import android.text.Html;
import android.text.Spannable;
import android.text.SpannableStringBuilder;
import android.text.style.BackgroundColorSpan;
import android.text.style.StyleSpan;
import android.text.style.UnderlineSpan;
import android.view.View;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private EditText nameEditText;
    private EditText messageEditText;
    private TextView labelTextView;
    private RadioButton boldRadioButton;
    private RadioButton underlineRadioButton;
    private RadioButton italicRadioButton;
    private CheckBox colorCheckBox;
    private Button displayButton;
    private Button clearButton;
    private Button exitButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        nameEditText = findViewById(R.id.name_edit_text);
        messageEditText = findViewById(R.id.message_edit_text);
        labelTextView = findViewById(R.id.label_text_view);
        boldRadioButton = findViewById(R.id.bold_radio_button);
        underlineRadioButton = findViewById(R.id.underline_radio_button);
        italicRadioButton = findViewById(R.id.italic_radio_button);
        colorCheckBox = findViewById(R.id.color_check_box);
        displayButton = findViewById(R.id.display_button);
        clearButton = findViewById(R.id.clear_button);
        exitButton = findViewById(R.id.exit_button);

        displayButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                displayMessage();
            }
        });

        clearButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                clearFields();
            }
        });

        exitButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    private void displayMessage() {
        String name = nameEditText.getText().toString().trim();
        String message = messageEditText.getText().toString().trim();

        if (name.isEmpty() || message.isEmpty()) {
            Toast.makeText(this, "Please enter name and message", Toast.LENGTH_SHORT).show();
            return;
        }

        SpannableStringBuilder builder = new SpannableStringBuilder();
        builder.append(name).append(": ").append(message);

        if (boldRadioButton.isChecked()) {
            builder.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), 0, name.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            builder.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), name.length() + 2, builder.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }

        if (underlineRadioButton.isChecked()) {
            builder.setSpan(new UnderlineSpan(), 0, name.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            builder.setSpan(new UnderlineSpan(), name.length() + 2, builder.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }

        if (italicRadioButton.isChecked()) {
            builder.setSpan(new StyleSpan(android.graphics.Typeface.ITALIC), 0, name.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            builder.setSpan(new StyleSpan(android.graphics.Typeface.ITALIC), name.length() + 2, builder.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }

        if (colorCheckBox.isChecked()) {
            builder.setSpan(new BackgroundColorSpan(Color.YELLOW), 0, builder.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        }

        labelTextView.setText(builder);
    }

    private void clearFields() {
	private void clearFields() {
	nameEditText.setText("");
	messageEditText.setText("");
	labelTextView.setText("");
}
}



3. Open the `activity_main.xml` layout file and add the following code:

```xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/name_edit_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter name" />

    <EditText
        android:id="@+id/message_edit_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter message"
        android:inputType="textMultiLine"
        android:minLines="5" />

    <RadioGroup
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal">

        <RadioButton
            android:id="@+id/bold_radio_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Bold" />

        <RadioButton
            android:id="@+id/underline_radio_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Underline" />

        <RadioButton
            android:id="@+id/italic_radio_button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Italic" />

    </RadioGroup>

    <CheckBox
        android:id="@+id/color_check_box"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Change color" />

    <Button
        android:id="@+id/display_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Display Message" />

    <Button
        android:id="@+id/clear_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Clear Fields" />

    <Button
        android:id="@+id/exit_button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Exit" />

    <TextView
        android:id="@+id/label_text_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:textSize="18sp" />

</LinearLayout>


