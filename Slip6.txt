A)

#include "stdio.h"
#include "stdlib.h"
#include "fcntl.h"
#include "sys/stat.h"
#include "sys/types.h"
#include "sys/mman.h"
int main(int argc,char* argv[])
{
int fd,size,i;
struct stat s1;
char *f,ch;
if(argc<2)
{
printf("\n Enter file name on command line");
exit(0);
}
fd=open(argv[1],O_RDONLY);
if(fd<0)
{
printf("\n unable to open file");
exit(0);
}
stat(argv[1],&s1);
size=s1.st_size;
f=(char*)mmap(0,size,PROT_READ,MAP_PRIVATE,fd,0);
for(i=size-1;i>=0;i--)
{
ch=f[i];
printf("%c",ch);
}
return 0;
}

B)

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/wait.h>
#include <dirent.h>
#include <sys/types.h>
#include <sys/stat.h>

#define MAX_LINE 80
#define MAX_ARGS 10

void list_files(char *dirname);
void list_entries(char *dirname);
void list_inodes(char *dirname);

int main(void) {
    char *args[MAX_ARGS];
    char line[MAX_LINE];
    int should_run = 1;
    pid_t pid;
    int status;
    char *tok;

    while (should_run) {
        printf("NewShell$ ");
        fflush(stdout);
        fgets(line, MAX_LINE, stdin);

        tok = strtok(line, " \n");
        int i = 0;
        while (tok != NULL) {
            args[i] = tok;
            i++;
            tok = strtok(NULL, " \n");
        }
        args[i] = NULL;

        if (strcmp(args[0], "exit") == 0) {
            should_run = 0;
        } else if (strcmp(args[0], "list") == 0) {
            if (i < 3) {
                printf("Invalid arguments for list command\n");
            } else if (strcmp(args[1], "f") == 0) {
                list_files(args[2]);
            } else if (strcmp(args[1], "n") == 0) {
                list_entries(args[2]);
            } else if (strcmp(args[1], "i") == 0) {
                list_inodes(args[2]);
            } else {
                printf("Invalid arguments for list command\n");
            }
        } else {
            pid = fork();
            if (pid < 0) {
                printf("Fork failed\n");
                exit(1);
            } else if (pid == 0) {
                execvp(args[0], args);
                printf("Invalid command\n");
                exit(1);
            } else {
                wait(&status);
            }
        }
    }
    return 0;
}

void list_files(char *dirname) {
    DIR *dir;
    struct dirent *entry;
    if ((dir = opendir(dirname)) == NULL) {
        printf("Unable to open directory %s\n", dirname);
        return;
    }
    while ((entry = readdir(dir)) != NULL) {
        if (entry->d_type == DT_REG) {
            printf("%s\n", entry->d_name);
        }
    }
    closedir(dir);
}

void list_entries(char *dirname) {
    DIR *dir;
    struct dirent *entry;
    int count = 0;
    if ((dir = opendir(dirname)) == NULL) {
        printf("Unable to open directory %s\n", dirname);
        return;
    }
    while ((entry = readdir(dir)) != NULL) {
        count++;
    }
    printf("%d\n", count);
    closedir(dir);
}

void list_inodes(char *dirname) {
    DIR *dir;
    struct dirent *entry;
    struct stat buf;
    if ((dir = opendir(dirname)) == NULL) {
        printf("Unable to open directory %s\n", dirname);
        return;
    }
    while ((entry = readdir(dir)) != NULL) {
        if (entry->d_type == DT_REG) {
            char path[100];
            sprintf(path, "%s/%s", dirname, entry->d_name);
            stat(path, &buf);
            printf("%s %lu\n", entry->d_name, buf.st_ino);
        }
    }
}



A)

$$activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">


<EditText
        android:id="@+id/list1_edittext"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:hint="Enter List 1 (comma-separated)"
        android:inputType="text"
        android:maxLines="1"
        android:textSize="16sp"
        app:layout_constraintEnd_toStartOf="@+id/list2_edittext"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <EditText
        android:id="@+id/list2_edittext"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:hint="Enter List 2 (comma-separated)"
        android:inputType="text"
        android:maxLines="1"
        android:textSize="16sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toEndOf="@+id/list1_edittext"
        app:layout_constraintTop_toTopOf="parent" />

    <RadioGroup
        android:id="@+id/operation_radiogroup"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:orientation="horizontal"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/list1_edittext">

        <RadioButton
            android:id="@+id/union_radiobutton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:checked="true"
            android:text="Union" />

        <RadioButton
            android:id="@+id/intersection_radiobutton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Intersection" />

    </RadioGroup>

    <Button
        android:id="@+id/calculate_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:text="Calculate"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/operation_radiogroup" />

    <TextView
        android:id="@+id/result_textview"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:textSize="16sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/calculate_button" />

</androidx.constraintlayout.widget.ConstraintLayout>


$$MainActivity.java

package com.example.extra3;

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.TextView;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class MainActivity extends AppCompatActivity {

    private EditText list1EditText;
    private EditText list2EditText;
    private RadioButton unionRadioButton;
    private RadioButton intersectionRadioButton;
    private Button calculateButton;
    private TextView resultTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        list1EditText = findViewById(R.id.list1_edittext);
        list2EditText = findViewById(R.id.list2_edittext);
        unionRadioButton = findViewById(R.id.union_radiobutton);
        intersectionRadioButton = findViewById(R.id.intersection_radiobutton);
        calculateButton = findViewById(R.id.calculate_button);
        resultTextView = findViewById(R.id.result_textview);

        calculateButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Get the input lists from the user
                String list1Input = list1EditText.getText().toString();
                String list2Input = list2EditText.getText().toString();

                // Convert the input strings to integer lists
                List<Integer> list1 = convertToList(list1Input);
                List<Integer> list2 = convertToList(list2Input);

                // Perform the selected operation
                if (unionRadioButton.isChecked()) {
                    List<Integer> union = performUnion(list1, list2);
                    displayResult(union);
                } else if (intersectionRadioButton.isChecked()) {
                    List<Integer> intersection = performIntersection(list1, list2);
                    displayResult(intersection);
                }
            }
        });
    }

    private List<Integer> convertToList(String input) {
        List<Integer> list = new ArrayList<>();
        String[] elements = input.split(",");

        for (String element : elements) {
            try {
                int value = Integer.parseInt(element.trim());
                list.add(value);
            } catch (NumberFormatException e) {
                e.printStackTrace();
            }
        }

        return list;
    }

    private List<Integer> performUnion(List<Integer> list1, List<Integer> list2) {
        Set<Integer> unionSet = new HashSet<>(list1);
        unionSet.addAll(list2);
        return new ArrayList<>(unionSet);
    }

    private List<Integer> performIntersection(List<Integer> list1, List<Integer> list2) {
        List<Integer> intersection = new ArrayList<>();
        Set<Integer> set = new HashSet<>(list1);

        for (Integer element : list2) {
            if (set.contains(element)) {
                intersection.add(element);
            }
        }

        return intersection;
    }

    private void displayResult(List<Integer> result) {
        StringBuilder sb = new StringBuilder();
        for (Integer element : result) {
            sb.append(element).append(", ");
        }

        if (sb.length() > 2) {
            sb.setLength(sb.length() - 2);
        }

        resultTextView.setText(sb.toString());
    }
}


B)

$$activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
    <TextView
        android:id="@+id/username"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Username"
        android:textColor="@color/black"
        android:textSize="25sp"
        android:textStyle="bold|normal"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintHorizontal_bias="0.27"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.307" />
    <EditText
        android:id="@+id/edusername"
        android:layout_width="255dp"
        android:layout_height="50dp"
        android:ems="10"
        android:hint="Username"
        android:inputType="textEmailAddress"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.512"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.364" />
    <TextView
        android:id="@+id/Password"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Password"
        android:textColor="@color/black"
        android:textSize="25sp"
        android:textStyle="bold|normal"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.26"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.44" />
    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Login"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.498"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.688" />
    <EditText
        android:id="@+id/editTextTextEmailAddress2"
        android:layout_width="263dp"
        android:layout_height="54dp"
        android:ems="10"
        android:inputType="textEmailAddress"
        android:hint="Password"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.527"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.503" />
</androidx.constraintlayout.widget.ConstraintLayout>

$$MainActivity.java

package com.example.extra3;

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
    TextView email,password;
    EditText ed_email,ed_password;
    Button login;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        email=findViewById(R.id.username);
        password=findViewById(R.id.Password);
        ed_email=findViewById(R.id.edusername);
        ed_password=findViewById(R.id.editTextTextEmailAddress2);
        login=findViewById(R.id.button);
        login.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (!TextUtils.isEmpty(ed_email.getText().toString()) &&
                        !TextUtils.isEmpty(ed_password.getText().toString())) {
                    if (ed_email.getText().toString().equals("root") &&
                            ed_password.getText().toString().equals("pg@pass1")) {
                        Toast.makeText(MainActivity.this, "Login SuccessFully ",
                                Toast.LENGTH_SHORT).show();
                    }else{
                        Toast.makeText(MainActivity.this, "Login Failed",
                                Toast.LENGTH_SHORT).show();
                    }
                } else {
                    Toast.makeText(MainActivity.this, "Field is empty ",
                            Toast.LENGTH_SHORT).show();
                }
            }
        });
    }
}
